---
version: 2.1

orbs:
  slack: circleci/slack@3.4.2

jobs:
  release_image:
    docker:
      - image: harbor.k8s.libraries.psu.edu/library/ci-utils:v1.0.6
    environment:
      REGISTRY_HOST: harbor.k8s.libraries.psu.edu
      REGISTRY_REPO: library/scholarsphere
      DOCKER_USERNAME: 'robot$circleci'
      GITHUB_USER: 'psu-stewardship-bot'
      CONFIG_REPO: git@github.com:psu-stewardship/scholarsphere-config.git
    steps:
      - add_ssh_keys
      - run:
          name: "Release"
          command: |
            /usr/local/bin/tag-image
            ssh-keyscan github.com > ~/.ssh/known_hosts
            git clone $CONFIG_REPO
            cd scholarsphere-config
            /usr/local/bin/pr-release argocd-prod/prod.yaml

  test:
    docker:
      - image: harbor.k8s.libraries.psu.edu/library/ci-utils:v1.0.6
    environment:
      REGISTRY_HOST: harbor.k8s.libraries.psu.edu
      REGISTRY_REPO: library/scholarsphere
      DOCKER_USERNAME: 'robot$circleci'
    parameters:
      publish:
        type: boolean
        default: true
    steps:
      - setup_remote_docker:
          version: 19.03.13
      - checkout
      - run:
          name: "Start Dependencies"
          background: true
          command: |
            docker-compose pull solr minio selenium redis db
            docker-compose up -d solr minio selenium redis db
      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
      - run:
          name: "Build Docker Container"
          command: |
            docker build -t $REGISTRY_HOST/$REGISTRY_REPO:$CIRCLE_SHA1 --target base .
      - run:
          name: "Niftany"
          command: |
            export TAG=${CIRCLE_SHA1}
            RAILS_ENV=test docker-compose -f docker-compose.yml -f docker-compose.test.yml run --name=niftany --service-ports test /app/bin/ci-niftany -p lint
            docker-compose -f docker-compose.yml -f docker-compose.test.yml run --name=eslint --service-ports test /app/bin/ci-eslint -p eslint
      - run:
          name: "Test"
          command: |
            export TAG=${CIRCLE_SHA1}
            export GIT_COMMITED_AT=$(git log -1 --date=short --pretty=format:%ct)
            RAILS_ENV=test docker-compose -f docker-compose.yml -f docker-compose.test.yml run --name=test --service-ports test /app/bin/ci-rspec
            docker cp test:/app/vendor .
      - save_cache:
          paths:
            - vendor/bundle
          key: bundle-{{ checksum "Gemfile.lock" }}
      - when:
          condition: << parameters.publish >>
          steps:
            - run:
                name: "Publishing the image"
                command: |
                  docker build -t $REGISTRY_HOST/$REGISTRY_REPO:$CIRCLE_SHA1 .
                  docker login -u $DOCKER_USERNAME -p $HARBOR_PASSWORD $REGISTRY_HOST
                  docker push $REGISTRY_HOST/$REGISTRY_REPO:$CIRCLE_SHA1
      - slack/status:
          fail_only: true
  deploy:
    docker:
      - image: harbor.k8s.libraries.psu.edu/library/ci-utils:v0.1.6
    environment:
      CONFIG_REPO: git@github.com:psu-stewardship/scholarsphere-config.git
      IMAGE_REPOSITORY: harbor.k8s.libraries.psu.edu/library/scholarsphere
    parameters:
      config_env:
        type: string
    steps:
      - add_ssh_keys
      - run:
          name: "Updating Config Repo"
          command: |
            export CONFIG_ENV=<< parameters.config_env >>
            ssh-keyscan github.com > ~/.ssh/known_hosts
            git clone $CONFIG_REPO
            cd scholarsphere-config
            ./generate_circle_application.sh

workflows:
  version: 2
  scholarsphere:
    jobs:
      - release_image:
          name: "release image"
          filters:
            tags:
              only:
                - /^v\d+.\d+.\d+.*/
            branches:
              ignore:
                - /.*/
      - test:
          name: test-no-publish
          publish: false
          filters:
            branches:
              only:
                - /^((?!preview|main).)*$/
      - test:
          name: test-publish
          publish: true
          filters:
            branches:
              only:
                - main
                - /preview\/.*/
      - deploy:
          config_env: qa
          requires:
            - test-publish
          filters:
            branches:
              only:
                - main
      - deploy:
          config_env: dev
          requires:
            - test-publish
          filters:
            branches:
              only:
                - /preview\/.*/
