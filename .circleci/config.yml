version: 2.1

orbs:
  slack: circleci/slack@3.4.2

jobs:
  test:
    docker:
      - image: devago/docker-compose
    environment:
      REGISTRY_HOST: harbor.dsrd.libraries.psu.edu
      REGISTRY_URL: harbor.dsrd.libraries.psu.edu/library/ss-test
      DOCKER_USERNAME: 'robot$circleci'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        name: "Start Dependencies"
        background: true
        command: |
          docker-compose pull solr minio selenium redis db
          docker-compose up -d solr minio selenium redis db
    - run:
        name: "Build Docker Container"
        command: |
          docker build -t $REGISTRY_URL:$CIRCLE_SHA1 --target base .
    - run:
        name: "Niftany"
        background: true
        command: |
          export TAG=${CIRCLE_SHA1}
          RAILS_ENV=test docker-compose -f docker-compose.yml -f docker-compose.test.yml run --name=niftany --service-ports test /app/bin/ci-niftany -p lint
    - run:
        name: "Eslint"
        background: true
        command: |
          export TAG=${CIRCLE_SHA1}
          RAILS_ENV=test docker-compose -f docker-compose.yml -f docker-compose.test.yml run --name=eslint --service-ports test /app/bin/ci-eslint -p eslint
    - run:
        name: "Publishing the image"
        background: true
        command: |
          docker build -t $REGISTRY_URL:$CIRCLE_SHA1 .
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $REGISTRY_HOST
          docker push $REGISTRY_URL:$CIRCLE_SHA1
    - run:
        name: "Test"
        command: |
          export TAG=${CIRCLE_SHA1}
          export GIT_COMMITED_AT=$(git log -1 --date=short --pretty=format:%ct)
          RAILS_ENV=test docker-compose -f docker-compose.yml -f docker-compose.test.yml run --name=test --service-ports test /app/bin/ci-rspec
  deploy-qa:
    docker:
      - image: harbor.dsrd.libraries.psu.edu/public/drone-utils:latest
    environment:
      CONFIG_REPO: git@github.com:psu-stewardship/scholarsphere-config.git
      CONFIG_ENV: qa
      IMAGE_REPOSITORY: harbor.dsrd.libraries.psu.edu/library/ss-test
    steps:
    - add_ssh_keys
    - run:
        name: "Updating Config Repo"
        command: |
            ssh-keyscan github.com > ~/.ssh/known_hosts
            git clone $CONFIG_REPO
            cd scholarsphere-config
            ./generate_circle_application.sh
  deploy-preview:
    docker:
      - image: harbor.dsrd.libraries.psu.edu/public/drone-utils:latest
    environment:
      CONFIG_REPO: git@github.com:psu-stewardship/scholarsphere-config.git
      IMAGE_REPOSITORY: harbor.dsrd.libraries.psu.edu/library/ss-test
    steps:
    - add_ssh_keys
    - run:
        name: "Updating Config Repo"
        command: |
           ssh-keyscan github.com > ~/.ssh/known_hosts
           git clone $CONFIG_REPO
           cd scholarsphere-config
           ./generate_circle_application.sh

workflows:
  version: 2
  scholarsphere:
    jobs:
      - test
      - deploy-qa:
          requires:
            - test
          filters:
            branches:
               only:
                - master
      - deploy-preview:
          requires:
            - test
          filters:
            branches:
              only:
                - /preview\/.*/
