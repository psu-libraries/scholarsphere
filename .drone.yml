---
kind: pipeline
name: default

test_common: &test_common
  image: docker 
  volumes:
  - name: docker-sock
    path: /var/run/host.sock
  depends_on:
    - build
  environment:
    RAILS_ENV: test
    POSTGRES_USER: scholarsphere
    POSTGRES_DB: scholarsphere
    POSTGRES_HOST: postgres
    POSTGRES_PASSWORD: scholarsphere
    CC_TEST_REPORTER_ID:
      from_secret: CC_TEST_REPORTER_ID

steps:
- name: build
  image: docker
  when:
    branch:
      exclude:
        - skip-ci*
    event:
      exclude:
      - tag
  environment:
    DOCKER_PASSWORD:
      from_secret: DOCKER_PASSWORD
  commands:
    - export DOCKER_HOST=unix:///var/run/host.sock
    - docker build -t harbor.dsrd.libraries.psu.edu/library/scholarsphere:$DRONE_BUILD_NUMBER --target base . 
    - docker build -t harbor.dsrd.libraries.psu.edu/library/scholarsphere:$DRONE_BUILD_NUMBER-rspec --target rspec . 
    - docker build -t harbor.dsrd.libraries.psu.edu/library/scholarsphere:$DRONE_BUILD_NUMBER-eslint --target eslint . 
    - docker build -t harbor.dsrd.libraries.psu.edu/library/scholarsphere:$DRONE_BUILD_NUMBER-niftany --target niftany . 
  volumes:
  - name: docker-sock
    path: /var/run/host.sock

- name: eslint
  <<: *test_common
  commands:
    - export DOCKER_HOST=unix:///var/run/host.sock
    - docker run harbor.dsrd.libraries.psu.edu/library/scholarsphere:$DRONE_BUILD_NUMBER-eslint

- name: niftany
  <<: *test_common
  commands:
    - export DOCKER_HOST=unix:///var/run/host.sock
    - docker run harbor.dsrd.libraries.psu.edu/library/scholarsphere:$DRONE_BUILD_NUMBER-niftany

- name: test
  <<: *test_common
  commands:
    - export DOCKER_HOST=unix:///var/run/host.sock
    - apk add bind-tools
    - export POSTGRES_HOST=$(dig +short postgres)
    - docker run
        --net host
        -e POSTGRES_PASSWORD=scholarsphere
        -e POSTGRES_USER=scholarsphere
        -e POSTGRES_DB=scholarsphere
        -e POSTGRES_HOST=$POSTGRES_HOST
        -e CC_TEST_REPORTER_ID=$CC_TEST_REPORTER_ID
        -e DRONE_COMMIT_SHA=$DRONE_COMMIT_SHA
        -e DRONE_BRANCH=$DRONE_BRANCH
        -e DRONE_BUILD_STARTED=$DRONE_BUILD_STARTED
        harbor.dsrd.libraries.psu.edu/library/scholarsphere:$DRONE_BUILD_NUMBER-rspec

- name: push
  image: docker
  when:
    branch:
      exclude:
        - skip-ci*
    event:
      exclude:
      - tag
  depends_on:
    - test
    - niftany
    - eslint
  environment:
    DOCKER_PASSWORD:
      from_secret: DOCKER_PASSWORD
  commands:
    - export DOCKER_HOST=unix:///var/run/host.sock
    - docker build -t harbor.dsrd.libraries.psu.edu/library/scholarsphere:$DRONE_BUILD_NUMBER --target production . 
    - docker login -u 'robot$drone' -p $DOCKER_PASSWORD harbor.dsrd.libraries.psu.edu
    - docker push harbor.dsrd.libraries.psu.edu/library/scholarsphere:$DRONE_BUILD_NUMBER
  volumes:
  - name: docker-sock
    path: /var/run/host.sock

- name: update ArgoCD (prod)
  image: alpine/git
  environment:
    CONFIG_ENV: prod
  when:
    branch:
      include:
        - master
    event:
      exclude:
      - pull_request
      - tag
  depends_on:
    - eslint
    - niftany
    - test
  commands:
    - git clone https://github.com/psu-stewardship/scholarsphere-config.git
    - cd scholarsphere-config
    - ./generate_application.sh

- name: update ArgoCD (qa)
  image: alpine/git
  environment:
    CONFIG_ENV: qa
  when:
    event:
      include:
      - tag
  depends_on:
    - eslint
    - niftany
    - test
  commands:
    - git clone https://github.com/psu-stewardship/scholarsphere-config.git
    - cd scholarsphere-config
    - ./generate_application.sh

- name: update ArgoCD (dev)
  image: harbor.dsrd.libraries.psu.edu/public/drone-utils:latest
  environment:
    CONFIG_ENV: dev
    ARGOCD_SERVER: argocd.dsrd.libraries.psu.edu
    SLACK_WEBHOOK_URL:
      from_secret: SLACK_WEBHOOK_URL
    ARGOCD_AUTH_TOKEN:
      from_secret: ARGOCD_AUTH_TOKEN
  when:
    branch:
      include:
        - preview/*
        - develop
    event:
      exclude:
      - pull_request
      - tag
  depends_on:
    - eslint
    - niftany
    - test
  commands:
    - git clone https://github.com/psu-stewardship/scholarsphere-config.git
    - cd scholarsphere-config
    - ./generate_application.sh

services:
- name: minio
  image: minio/minio:latest
  environment:
    MINIO_ACCESS_KEY: scholarsphere
    MINIO_SECRET_KEY: scholarsphere
  entrypoint:
    - /bin/sh
    - -c
    - mkdir /data/scholarsphere; minio --compat server /data

- name: postgres
  image: postgres:10
  when:
    branch:
      exclude:
        - skip-ci*
    event:
      exclude:
      - pull_request
      - tag
  environment:
    POSTGRES_PASSWORD: scholarsphere
    POSTGRES_USER: scholarsphere
    POSTGRES_DB: scholarsphere
  
volumes:
- name: docker-sock
  host:
    path: /var/run/docker.sock
---
kind: signature
hmac: 2b2105e18ebff2f51f9bfd31656331e0b21fd68c23764aabf1c438ba1c7e4fa6

...
