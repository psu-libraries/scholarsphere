#!/usr/bin/env ruby
# frozen_string_literal: true.
require 'fileutils'
require 'figaro'
require 'net/http'
require 'uri'

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def wait_for_solr(solr_host, solr_port)
  uri = URI.parse("http://#{solr_host}:#{solr_port}/")
  begin
    retries ||= 0
    Net::HTTP.get(uri)
  rescue Errno::ECONNREFUSED, EOFError => e
    sleep(1)
    print '.'
    retry if (retries += 1) < 12
    raise e
  end
  puts '.'
end

def system!(*args)
  command = args.join(' ')
  system(command) || abort("\n== Command #{args} failed ==")
end

Figaro.application = Figaro::Application.new(
  environment: ENV.fetch('RAILS_ENV', 'development'),
  path: Pathname.new(APP_ROOT).join('config').join('application.yml')
)
fig = Figaro.load

# Populate an array of environment variables to pass to docker-compose
env_vars = []
fig.each { |k, v| env_vars.push("#{k}=#{v}") }

FileUtils.chdir APP_ROOT do
  # This script is a way to setup or update your development environment automatically.
  # This script is idempotent, so that you can run it at anytime and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install')

  puts '== Starting up Minio, and Solr =='
  system! env_vars + %w{
    docker-compose up -d minio solr
  }

  puts '== Waiting for Solr =='
  solr_host = fig.fetch('SOLR_HOST', 'localhost')
  solr_port = fig.fetch('SOLR_PORT', '8983')
  wait_for_solr(solr_host, solr_port)

  puts '== Initalizing Solr =='

  system! %w{
    bundle exec rake solr:init
  }
  system! %w{
    RAILS_ENV=test bundle exec rake solr:init
  }

  # Install JavaScript dependencies
  # system('bin/yarn')

  # puts "\n== Copying sample files =="
  # unless File.exist?('config/database.yml')
  #   FileUtils.cp 'config/database.yml.sample', 'config/database.yml'
  # end

  puts "\n== Preparing database =="
  system! 'bin/rails db:prepare'

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear'

  puts "\n== Restarting application server =="
  system! 'bin/rails restart'
en
