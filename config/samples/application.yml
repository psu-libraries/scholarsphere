# Sample Figaro config file
# Copy this to config/application.yml and edit as needed.
# --------------------------------------------------------------------------------------------------------------------
# To enable uploading to S3 in Amazon, you'll need the following variables configured:
#
#  AWS_BUCKET:            ""
#  AWS_ACCESS_KEY_ID:     ""
#  AWS_SECRET_ACCESS_KEY: ""
#  AWS_REGION:            ""
#
# To enable uploading via Minio, ensure that minio is installed. See:
#   https://github.com/minio/minio
#
# You can optionally set a MINIO_ACCESS_KEY, MINIO_SECRET_KEY, and MINIO_PORT, or omit them and it will use defaults.
# Start up minio with:
#   bin/minio
#
# The corresponding environment configuation would look like:
#
#   S3_ENDPOINT:           "http://127.0.0.1:9000" # Port should be the same as MINIO_PORT
#   AWS_BUCKET:            "scholarsphere"
#   AWS_ACCESS_KEY_ID:     "asdf"     # this should be the same as MINIO_ACCESS_KEY
#   AWS_SECRET_ACCESS_KEY: "asdfasdf" # this should be the same as MINIO_SECRET_KEY
#   AWS_REGION:            "us-east-1"
#
# You will need to create a "scholarsphere" bucket in your Minio instance. This can be done via the web interface.
# Go to http://127.0.0.1:9000/minio and click the red circle plus (+) sign in the bottom-right corner.
#
# --------------------------------------------------------------------------------------------------------------------
#
# DataCite authorization for minting DOIs:
#
# DATACITE_ENDPOINT: "https://api.test.datacite.org/dois"
# DATACITE_PREFIX: "10.33532"
# DATACITE_PUBLISHER: "scholarsphere"
# DATACITE_USERNAME: ""
# DATACITE_PASSWORD: ""
#
# --------------------------------------------------------------------------------------------------------------------
#
# Logging (production only)
#
# LOGRAGE_ENABLED: 
# RAILS_LOG_JSON: 
#
# --------------------------------------------------------------------------------------------------------------------
#
# Admins: all users in the given UMG are administrators
#
# ADMIN_GROUP: "umg/up.dlt.scholarsphere-admin"
#
# --------------------------------------------------------------------------------------------------------------------
#
# Redis Configuration
#
# Note: Defaults to 'redis://127.0.0.1:6379/0' which should work for local development. Password is only required for
# production instances.
#
# REDIS_HOST:
# REDIS_PORT:
# REDIS_PASSWORD:
# REDIS_DATABASE:
#
# --------------------------------------------------------------------------------------------------------------------
#
# Sidekiq Configuration (production only)
#
# SIDEKIQ_QUEUE_LATENCY_THRESHOLD: 30
# SIDEKIQ_MAX_RETRIES: 2
# 
# --------------------------------------------------------------------------------------------------------------------
# 
# Solr
#
# SOLR_COLLECTION: scholarsphere-development
# SOLR_HOST: localhost
# SOLR_PORT: 8983
# SOLR_CONFIG_DIR: solr/conf
# SOLR_NUM_SHARDS: 1
# SOLR_USERNAME: solr
# SOLR_PASSWORD: solr
#
# --------------------------------------------------------------------------------------------------------------------
#
# Minio: configuration used when starting minio with bin/minio
#
# MINIO_ACCESS_KEY: "asdf"
# MINIO_SECRET_KEY: "asdfasdf"
# MINIO_PORT: "9000"
#
# --------------------------------------------------------------------------------------------------------------------
#
# OAuth Server
#
# If the oauth servers authorize path differs from /oauth/authorize, you can set that value here
# Under normal circumstances, this shouldn't need changing
# 
# OAUTH_AUTHORIZE_URL: "/oauth/authorize"
# OAUTH_TOKEN_URL: "/oauth/token"

# --------------------------------------------------------------------------------------------------------------------
# 
# Geonames: username used to connect to the geonames api (https://sws.geonames.org)
# 
# GEONAMES_USER: "scholarsphere_test"
#
# --------------------------------------------------------------------------------------------------------------------
#
# URLs
#
# Used to construct the URI to the application:
#
# DEFAULT_URL_HOST: "localhost:3000
# DEFAULT_URL_PROTOCOL: "http"
#
# In cases where the API endpoint might differ from the actual application, we can supply one here. This is used in
# local development where external services, like metadata-listener, that run inside a docker container needed a
# different url to access Scholarpshere. For typical production deployments, this variable will not be needed.
# The protocol is the same.
#
# API_URL_HOST: "localhost:3000"
#
# --------------------------------------------------------------------------------------------------------------------

# Defaults for your local development environment
DOWNLOAD_URL_TTL: 6
POSTGRES_USER: "[username]" # This is typically $ whoami
SOLR_HOST: localhost
SOLR_PORT: 8983

development:
  POSTGRES_DB: "scholarsphere_4_development"
  OAUTH_APP_ID: ""
  OAUTH_APP_URL: ""
  OAUTH_APP_SECRET: ""
  SOLR_COLLECTION: scholarsphere-development

  # Additional configurations, see above for details:
  # Required:
  #  * uploading via S3 or Minio
  #  * OAuth server
  # Optional:
  #  * Redis
  #  * Geonames 

test:
  POSTGRES_DB: "scholarsphere_4_test"
  OAUTH_APP_ID: ""
  OAUTH_APP_URL: ""
  OAUTH_APP_SECRET: ""
  SOLR_COLLECTION: scholarsphere-test

  # Additional configurations, see above for details:
  # Required:
  #  * uploading via Minio ONLY
